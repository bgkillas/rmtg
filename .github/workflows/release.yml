name: release

on: [push, pull_request]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y libwayland-dev libudev-dev libasound2-dev pkg-config
    - name: Build skia
      run: cargo build --release
    - uses: actions/upload-artifact@v4
      with:
        name: rmtg
        path: target/release/rmtg
  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build skia
      run: cargo build --release
    - name: make .app
      run: |
        mkdir -p app/rmtg.app/Contents/MacOS
        cp target/release/rmtg app/rmtg.app/Contents/MacOS/
        cp .github/workflows/Info.plist app/rmtg.app/Contents/
    - uses: actions/upload-artifact@v4
      with:
        name: rmtg-macos
        path: app
  build-macos_x86_64:
    runs-on: macos-13
    steps:
    - uses: actions/checkout@v4
    - name: Build skia
      run: cargo build --release
    - name: make .app
      run: |
        mkdir -p app/rmtg.app/Contents/MacOS
        cp target/release/rmtg app/rmtg.app/Contents/MacOS/
        cp .github/workflows/Info.plist app/rmtg.app/Contents/
    - uses: actions/upload-artifact@v4
      with:
        name: rmtg-macos-x86_64
        path: app
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
       toolchain: stable
       target: x86_64-pc-windows-gnu
       profile: minimal
       override: true
    - name: Build
      run: cargo build --release
    - uses: actions/upload-artifact@v4
      with:
        name: rmtg.exe
        path: target/release/rmtg.exe
