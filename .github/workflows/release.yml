name: release
'on':
  - push
  - pull_request
jobs:
  build-linux:
    runs-on: ubuntu-latest
    container:
      image: 'registry.gitlab.steamos.cloud/steamrt/sniper/sdk:latest'
    steps:
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          target: x86_64-unknown-linux-gnu
          override: true
      - uses: actions/checkout@v5
      - name: Install system dependencies
        run: |
          rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
          sudo apt update
          sudo apt install -y libwayland-dev libudev-dev libasound2-dev pkg-config
      - name: Build
        run: cargo +nightly build --release
      - name: make
        run: |
          mkdir -p rmtg
          cp target/release/rmtg rmtg
          cp libsteam_api.so rmtg
      - uses: actions/upload-artifact@v4
        with:
          name: rmtg-linux
          path: rmtg
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          target: aarch64-apple-darwin
          override: true
      - name: rust
        run: rustup component add rust-src --toolchain nightly-aarch64-apple-darwin
      - name: Build
        run: cargo +nightly build --release
      - name: make .app
        run: |
          mkdir -p rmtg.app/Contents/MacOS
          cp target/release/rmtg rmtg.app/Contents/MacOS/
          cp libsteam_api.dylib rmtg.app/Contents/MacOS/
          cp .github/workflows/Info.plist rmtg.app/Contents/
      - uses: actions/upload-artifact@v4
        with:
          name: rmtg-macos
          path: rmtg.app
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install MSYS2 and GMP
        uses: msys2/setup-msys2@v2
        with:
         update: true
         install: >-
          base-devel
          mingw-w64-x86_64-rustup
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-pkg-config
          mingw-w64-x86_64-gmp
          mingw-w64-x86_64-mpfr
          mingw-w64-x86_64-make
          mingw-w64-x86_64-clang
          m4
          make
          python
          openssl
          git
          mingw-w64-x86_64-gn
          mingw-w64-x86_64-fontconfig
          mingw-w64-x86_64-libpng
          mingw-w64-x86_64-freetype
          expat
          llvm
          ninja
         msystem: MINGW64
      - name: install rust
        shell: msys2 {0}
        env:
         CARGO_HOME: /mingw64/.cargo
         RUSTUP_HOME: /mingw64/.rustup
         PKG_CONFIG_PATH: /mingw64/lib/pkgconfig
         PATH: /mingw64/bin:$PATH
         CC: clang
        run: |
         rustup target add x86_64-pc-windows-gnu
         rustup install nightly-x86_64-pc-windows-gnu
         rustup component add rust-src --toolchain nightly-x86_64-pc-windows-gnu
      - name: Build
        shell: msys2 {0}
        env:
         CARGO_HOME: /mingw64/.cargo
         RUSTUP_HOME: /mingw64/.rustup
         PKG_CONFIG_PATH: /mingw64/lib/pkgconfig
         PATH: /mingw64/bin:$PATH
         CC: clang
        run: cargo +nightly-x86_64-pc-windows-gnu build --target x86_64-pc-windows-gnu --release
      - name: make
        run: |
          mkdir rmtg
          cp target/release/rmtg.exe rmtg
          cp steam_api64.dll rmtg
      - uses: actions/upload-artifact@v4
        with:
          name: rmtg-win
          path: rmtg
