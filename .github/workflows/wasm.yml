name: Build and Deploy WASM app

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y libwayland-dev libudev-dev libasound2-dev pkg-config

      - name: Install wasm-pack
        run: cargo install wasm-pack
      - name: Install Binaryen (wasm-opt)
        run: |
          BINARYEN_VERSION=$(curl -s https://api.github.com/repos/WebAssembly/binaryen/releases/latest | jq -r .tag_name)
          curl -L -O https://github.com/WebAssembly/binaryen/releases/download/${BINARYEN_VERSION}/binaryen-${BINARYEN_VERSION}-x86_64-linux.tar.gz
          tar -xzf binaryen-${BINARYEN_VERSION}-x86_64-linux.tar.gz
          echo "$(pwd)/binaryen-${BINARYEN_VERSION}/bin" >> $GITHUB_PATH
      - name: fmt
        run: cargo fmt --check
      - name: lint
        run: |
         export RUSTFLAGS='--cfg getrandom_backend="wasm_js"'
         cargo clippy --no-default-features --features "wasm" --target wasm32-unknown-unknown

      - name: Build WASM app
        run: |
          rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
          cd www
          bash start.sh

      - name: Copy site files to output
        run: |
          mkdir dist
          cp -r www/* dist/
          unlink dist/assets
          cp -R assets/ dists/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write

    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4